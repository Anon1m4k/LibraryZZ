using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace Зимнее_задание
{
    public class Выбор_действия //Класс, отвечающий за взаимодействие с пользователем и управление библиотекой книг
    {
        Запись_CSV_файла Запись_чтение_CSV = new Запись_CSV_файла(); //Экземпляр класса для работы с CSV файлом
        private List<Записанная_книга> книги = new List<Записанная_книга>(); //Список книг, используемых для операций с библиотекой
        private const string Путь_к_файлу = "Библиотека.csv"; //Путь к файлу, в котором хранятся данные о книгах
        public void Добавить_книгу() // Метод для добавления новой книги в библиотеку
        {
            Console.Write("Введите название книги: ");
            string название = Console.ReadLine();
            Console.Write("Введите автора: ");
            string автор = Console.ReadLine();
            Console.Write("Введите издательство: ");
            string издательство = Console.ReadLine();

            bool год_указан_правильно = false;
            int год_издания = 0;

            while (!год_указан_правильно) //Цикл для ввода года издания с проверкой корректности ввода
            {
                Console.Write("Введите год издания: ");
                try
                {
                    год_издания = Convert.ToInt32(Console.ReadLine());
                    год_указан_правильно = true;
                }
                catch (FormatException)
                {
                    Console.WriteLine("Год должен вводиться числом, попробуйте ещё раз.");
                }
            }
            var книга = new Записанная_книга //Создаем новый объект книги с введенной информацией
            {   Название = название,
                Автор = автор,
                Год_издания = год_издания,
                Издательство = издательство
            };
            книги.Add(книга);
            Запись_чтение_CSV.Добавить_в_CSV(книга, true);
        }
        public void Удалить_книгу() //Метод для удаления книги из библиотеки
        {
            книги = Запись_чтение_CSV.Прочитать_из_CSV(); //Считываем данные из CSV файла в список книг
            Console.Write("Введите название книги для удаления: "); //Запрашиваем у пользователя название книги для удаления
            string название = Console.ReadLine();
            var линии = new List<string>(File.ReadAllLines(Путь_к_файлу)); // Создаем список строк из файла
            var книга_удалена = false; //Флаг для определения успешности удаления

            for (int i = 0; i < линии.Count; i++) //Проходим по списку строк, ищем нужную книгу и удаляем её
            {
                if (линии[i].Contains(название))
                {
                    линии.RemoveAt(i); //Удаляем строку с книгой
                    книга_удалена = true;
                    break;
                }
            }
            if (книга_удалена) //Проверяем, была ли книга удалена
            {
                File.WriteAllLines(Путь_к_файлу, линии, Encoding.UTF8); //Записываем изменённые данные обратно в файл
                Console.WriteLine("Книга успешно удалена.");
            }
            else
            {
                Console.WriteLine("Книга не найдена.");
            }
        }
        public void Поиск_по_автору()
        {
            книги = Запись_чтение_CSV.Прочитать_из_CSV();
            Поиск_книг поиск = new Поиск_книг(книги); // Создание объекта класса Поиск_книг
            поиск.Поиск_по_автору(); // Вызов метода через созданный объект
        }
        public void Поиск_по_названию()
        {
            книги = Запись_чтение_CSV.Прочитать_из_CSV();
            Поиск_книг поиск = new Поиск_книг(книги); // Создание объекта класса Поиск_книг
            поиск.Поиск_по_названию(); // Вызов метода через созданный объект
        }
        public void Добавление_записи()
        {
            книги = Запись_чтение_CSV.Прочитать_из_CSV();
            Взятие_или_возврат_книги Запись = new Взятие_или_возврат_книги(Запись_чтение_CSV);
            Запись.Добавление_записи();
        }
        public void Возврат_записи()
        {
            книги = Запись_чтение_CSV.Прочитать_из_CSV();
            Взятие_или_возврат_книги Возврат = new Взятие_или_возврат_книги(Запись_чтение_CSV);
            Возврат.Возврат_записи();
        }
        public void Меню() //Метод для отображения меню выбора действий
        {
            Console.WriteLine("Выберите действие:");
            Console.WriteLine("1. Добавить книгу");
            Console.WriteLine("2. Удалить книгу");
            Console.WriteLine("3. Искать книги по автору");
            Console.WriteLine("4. Искать книги по названию или частичному совпадению");
            Console.WriteLine("5. Добавить ФИО взявшего книгу");
            Console.WriteLine("6. Вернуть книгу");
            Console.WriteLine("7. Выход");
        }
        public void Выполнить() //Основной метод для запуска программы
        {
            while (true)
            {
                Меню();
                var выбор = Console.ReadLine();
                switch (выбор)
                {
                    case "1":
                        Добавить_книгу();
                        break;
                    case "2":
                        Удалить_книгу();
                        break;
                    case "3":
                        Поиск_по_автору();
                        break;
                    case "4":
                        Поиск_по_названию();
                        break;
                    case "5":
                        Добавление_записи();
                        break;
                    case "6":
                        Возврат_записи();
                        break; 
                    case "7":
                        return;
                    default:
                        Console.WriteLine("Неверный выбор. Пожалуйста, попробуйте снова.");
                        break;
                }
            }
        }
    }
}