  public class Запись_CSV_файла



/*public void Сохранить_в_CSV(List<Записанная_книга> книги) // Метод для сохранения списка книг в CSV файл
 {
     var csv = new StringBuilder(); // Создание объекта StringBuilder для формирования строки с данными книг                                 //Старый метод нерабочий

     foreach (var книга in книги) // Проход по каждому элементу списка книг
     {
         var строка = $"{книга.Название},{книга.Автор},{книга.Издательство},{книга.Год_издания},{книга.Записано_за}"; // Формирование строки с данными книги в формате CSV (разделитель - запятая)
         csv.AppendLine(строка); // Добавление сформированной строки в объект StringBuilder
     }      
     
     File.AppendAllText(Путь_к_файлу, csv.ToString(), Encoding.UTF8); // Запись всех данных в CSV файл с использованием кодировки UTF-8
     //File.WriteAllText(Путь_к_файлу, csv.ToString(), Encoding.UTF8);
     Console.WriteLine("Книга сохранена.");
 }*/

 /* public void Добавить_записть_в_CSV(List<Записанная_книга> книги) // Метод для добавления записи на человека в CSV файл
  {
      var csv = new StringBuilder();

      foreach (var книга in книги)
      {
          var строка = $"{книга.Название},{книга.Автор},{книга.Издательство},{книга.Год_издания},{книга.Записано_за + "," +DateTime.Now}";                              //Старый метод нерабочий
          csv.AppendLine(строка);
      }

      File.WriteAllText(Путь_к_файлу, csv.ToString(), Encoding.UTF8); // !!!Различие методов Сохранить_в_CSV и Добавить_записть_в_CSV состоит только в способе записи данных в файл!!!

      Console.WriteLine("Книга сохранена.");
  }*/

 /* public void Сохранить_в_CSV(Записанная_книга книга)
  {
      var csv = new StringBuilder();
      var строка = $"{книга.Название},{книга.Автор},{книга.Издательство},{книга.Год_издания},{книга.Записано_за}";
      csv.AppendLine(строка);
      File.AppendAllText(Путь_к_файлу, csv.ToString(), Encoding.UTF8); //Записываем данные в CSV файл с использованием кодировки UTF-8  //Старый метод рабочий
      Console.WriteLine("Книга сохранена.");
      csv = null;
  }

  public void Добавить_записть_в_CSV(Записанная_книга книга)
  {
      var строки = File.ReadAllLines(Путь_к_файлу).ToList(); //Чтение всего содержимого файла
      var индекс = строки.FindIndex(s => s.Split(',')[0] == книга.Название); //Найти строку, соответствующую названию книги

      if (индекс >= 0)
      {
          var новаяСтрока = $"{книга.Название},{книга.Автор},{книга.Издательство},{книга.Год_издания},{книга.Записано_за},{DateTime.Now}"; //Формируем новую строку с обновленными данными //Старый метод рабочий
          строки[индекс] = новаяСтрока; //Обновляем строку в списке
          File.WriteAllLines(Путь_к_файлу, строки, Encoding.UTF8); //Перезаписываем файл с обновленным списком строк
          Console.WriteLine($"Информация о книге '{книга.Название}' обновлена.");
      }
      else
      {
          Console.WriteLine($"Книга с названием '{книга.Название}' не найдена.");
      }
  }*/

######################################################################################################

public class Выбор_действия


//год_издания = int.Parse(Console.ReadLine()); //Можно удалить


 //Запись_чтение_CSV.Сохранить_в_CSV(книга); //Запасной вариант раздельный


 /* public void Поиск_по_автору() //Метод для поиска книг по автору
  {
      книги = Запись_чтение_CSV.Прочитать_из_CSV();
      Console.Write("Введите автора для поиска: ");
      string автор = Console.ReadLine();
      var найденные_книги = книги.Where(b => b.Автор.Equals(автор, StringComparison.OrdinalIgnoreCase)).ToList(); //Находим все книги указанного автора

      if (найденные_книги.Any()) //Проверяем, были ли найдены книги
      {
          Console.WriteLine("Найденные книги: ");
          foreach (var книга in найденные_книги) //Проходим по списку найденных книг и выводим их на экран
          {
              Console.WriteLine(книга);
          }
      }
      else
      {
          Console.WriteLine("Книги не найдены.");
      }
  }
  public void Поиск_по_букве() //Метод для поиска книг по первой букве названия
  {
      книги = Запись_чтение_CSV.Прочитать_из_CSV();
      Console.Write("Введите букву для поиска: ");
      char буква = Console.ReadKey().KeyChar;
      Console.ReadKey(); //=)
      var найденные_книги = книги.Where(b => b.Название.StartsWith(буква.ToString(), StringComparison.OrdinalIgnoreCase)).ToList(); //Находим все книги, начинающиеся с указанной буквы

      if (найденные_книги.Any()) //Проверяем, были ли найдены книги
      {
          Console.WriteLine("Найденные книги:");
          foreach (var книга in найденные_книги)
          {
              Console.WriteLine(книга);
          }
      }
      else
      {
          Console.WriteLine("Книги не найдены.");
      }
  }*/


 /*public void Добавление_записи() //Метод для добавления записи о взятии книги читателем
 {
     var Запись_CSV = new Запись_CSV_файла();
     Console.Write("Введите название книги: ");
     string название = Console.ReadLine();
     var книги = Запись_CSV.Прочитать_из_CSV();
     var книга = книги.FirstOrDefault(b => b.Название.Equals(название, StringComparison.OrdinalIgnoreCase));

     if (книга != null)
     {
         Console.Write("Введите ФИО человека, который взял книгу: ");
         книга.Записано_за = Console.ReadLine();
         //Запись_CSV.Добавить_записть_в_CSV(книги); //Запасной вариант раздельный         
         Запись_CSV.Добавить_в_CSV(книга, false); //Вариант совместный
     }
     else
     {
         Console.WriteLine("Книга не найдена.");
     }
 }*/

//Год_издания = int.Parse(значение[3]), //можно удалить


############################################################################################

public class Взятие_или_возврат_книги


/*public void Добавление_записи()
       {
           Console.Write("Введите название книги: ");
           string название = Console.ReadLine();
           var книги = записьCSV.Прочитать_из_CSV();
           var книга = книги.FirstOrDefault(b => b.Название.Equals(название, StringComparison.OrdinalIgnoreCase));

           if (книга != null)
           {
               Console.Write("Введите ФИО человека, который взял книгу: ");
               книга.Записано_за = Console.ReadLine();
               записьCSV.Добавить_в_CSV(книга, false);
           }
           else
           {
               Console.WriteLine("Книга не найдена.");
           }
       }*/